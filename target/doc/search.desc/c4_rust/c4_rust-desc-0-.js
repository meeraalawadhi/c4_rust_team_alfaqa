searchState.loadedDescShard("c4_rust", 0, "Represents an expression in the C abstract syntax tree …\nA lexer that tokenizes C source code into a stream of <code>Token</code>…\nA parser that constructs an AST from a stream of tokens.\nRepresents a statement in the C abstract syntax tree (AST).\nRepresents the possible tokens produced by the lexer.\nAdvances the parser to the next token.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the current line number in the source code.\nCreates a new <code>Lexer</code> instance from a source string.\nCreates a new <code>Parser</code> instance from a source string.\nRetrieves the next token from the input source.\nParses a comma-separated list of arguments for a function …\nParses a block of statements enclosed in braces or a …\nParses an expression with additive operators (<code>+</code>, <code>-</code>).\nParses a factor, including unary operators, literals, and …\nParses a single statement.\nParses a term with multiplicative operators (<code>*</code>, <code>/</code>).")